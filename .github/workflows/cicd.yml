name: Build and Deploy to EC2

on:
  push:
    branches:
      - staging

jobs:
  build:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Build WAR Package
        run: mvn clean package -DskipTests --file JavaApp-CICD/pom.xml

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: ./JavaApp-CICD
          file: ./JavaApp-CICD/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/git-petclinic

  deploy:
    name: Deploy to EC2 Instance
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Deploy via SSH
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            if ! command -v docker &> /dev/null; then
              echo "Docker not found. Installing..."
              sudo apt update
              sudo apt install -y docker.io
              sudo systemctl start docker
              sudo systemctl enable docker
            else
              echo "Docker already installed."
            fi

            echo "Cleaning old containers if any..."
            sudo docker stop petclinic || true
            sudo docker rm petclinic || true
            sudo docker stop mysql || true
            sudo docker rm mysql || true

            echo "Creating Docker network..."
            sudo docker network create petclinic-net || true

            echo "Pulling MySQL image..."
            sudo docker pull mysql

            echo "Starting MySQL container..."
            sudo docker run -d --name mysql --network petclinic-net \
              -e MYSQL_ROOT_PASSWORD=root \
              -e MYSQL_DATABASE=petclinic \
              -e MYSQL_USER=petclinic \
              -e MYSQL_PASSWORD=petclinic \
              -p 3306:3306 \
              mysql

            echo "Pulling and starting Petclinic container..."
            sudo docker pull nabin011011/git-petclinic
            sudo docker run -d --name petclinic --network petclinic-net \
              -p 8080:8080 \
              nabin011011/git-petclinic
